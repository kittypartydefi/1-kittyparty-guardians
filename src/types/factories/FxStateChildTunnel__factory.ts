/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FxStateChildTunnel,
  FxStateChildTunnelInterface,
} from "../FxStateChildTunnel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChild",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRootMessageSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestStateId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "sendMessageToRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dbf380380610dbf8339818101604052810190610032919061008f565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061010a565b600081519050610089816100f3565b92915050565b6000602082840312156100a5576100a46100ee565b5b60006100b38482850161007a565b91505092915050565b60006100c7826100ce565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fc816100bc565b811461010757600080fd5b50565b610ca6806101196000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063888370941161005b57806388837094146101055780639a113ee2146101215780639a7c4b711461013d578063e6a8e7451461015957610088565b8063142bc2ae1461008d578063450d11f0146100ab5780635a319df9146100c95780637f1e9cb0146100e7575b600080fd5b610095610177565b6040516100a291906108c7565b60405180910390f35b6100b3610205565b6040516100c091906108ac565b60405180910390f35b6100d1610229565b6040516100de9190610949565b60405180910390f35b6100ef61022f565b6040516100fc91906108ac565b60405180910390f35b61011f600480360381019061011a9190610702565b610255565b005b61013b6004803603810190610136919061072f565b61032a565b005b61015760048036038101906101529190610778565b610336565b005b610161610419565b60405161016e91906108ac565b60405180910390f35b6004805461018490610a65565b80601f01602080910402602001604051908101604052809291908181526020018280546101b090610a65565b80156101fd5780601f106101d2576101008083540402835291602001916101fd565b820191906000526020600020905b8154815290600101906020018083116101e057829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dd90610929565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6103338161043f565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bb906108e9565b60405180910390fd5b610413848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610479565b50505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b0368160405161046e91906108c7565b60405180910390a150565b81600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190610909565b60405180910390fd5b8360028190555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816004908051906020019061056892919061056f565b5050505050565b82805461057b90610a65565b90600052602060002090601f01602090048101928261059d57600085556105e4565b82601f106105b657805160ff19168380011785556105e4565b828001600101855582156105e4579182015b828111156105e35782518255916020019190600101906105c8565b5b5090506105f191906105f5565b5090565b5b8082111561060e5760008160009055506001016105f6565b5090565b600061062561062084610989565b610964565b90508281526020810184848401111561064157610640610b35565b5b61064c848285610a23565b509392505050565b60008135905061066381610c42565b92915050565b60008083601f84011261067f5761067e610b2b565b5b8235905067ffffffffffffffff81111561069c5761069b610b26565b5b6020830191508360018202830111156106b8576106b7610b30565b5b9250929050565b600082601f8301126106d4576106d3610b2b565b5b81356106e4848260208601610612565b91505092915050565b6000813590506106fc81610c59565b92915050565b60006020828403121561071857610717610b3f565b5b600061072684828501610654565b91505092915050565b60006020828403121561074557610744610b3f565b5b600082013567ffffffffffffffff81111561076357610762610b3a565b5b61076f848285016106bf565b91505092915050565b6000806000806060858703121561079257610791610b3f565b5b60006107a0878288016106ed565b94505060206107b187828801610654565b935050604085013567ffffffffffffffff8111156107d2576107d1610b3a565b5b6107de87828801610669565b925092505092959194509250565b6107f5816109e7565b82525050565b6000610806826109ba565b61081081856109c5565b9350610820818560208601610a32565b61082981610b44565b840191505092915050565b60006108416021836109d6565b915061084c82610b55565b604082019050919050565b6000610864602b836109d6565b915061086f82610ba4565b604082019050919050565b6000610887602a836109d6565b915061089282610bf3565b604082019050919050565b6108a681610a19565b82525050565b60006020820190506108c160008301846107ec565b92915050565b600060208201905081810360008301526108e181846107fb565b905092915050565b6000602082019050818103600083015261090281610834565b9050919050565b6000602082019050818103600083015261092281610857565b9050919050565b600060208201905081810360008301526109428161087a565b9050919050565b600060208201905061095e600083018461089d565b92915050565b600061096e61097f565b905061097a8282610a97565b919050565b6000604051905090565b600067ffffffffffffffff8211156109a4576109a3610af7565b5b6109ad82610b44565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006109f2826109f9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610a50578082015181840152602081019050610a35565b83811115610a5f576000848401525b50505050565b60006002820490506001821680610a7d57607f821691505b60208210811415610a9157610a90610ac8565b5b50919050565b610aa082610b44565b810181811067ffffffffffffffff82111715610abf57610abe610af7565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560008201527f5200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560008201527f525f46524f4d5f524f4f54000000000000000000000000000000000000000000602082015250565b7f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160008201527f4c52454144595f53455400000000000000000000000000000000000000000000602082015250565b610c4b816109e7565b8114610c5657600080fd5b50565b610c6281610a19565b8114610c6d57600080fd5b5056fea264697066735822122082e966387f9de5521369a5d5e7c8c93e221e16f0173162a90c54dfeaf2092e7164736f6c63430008070033";

export class FxStateChildTunnel__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _fxChild: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FxStateChildTunnel> {
    return super.deploy(
      _fxChild,
      overrides || {}
    ) as Promise<FxStateChildTunnel>;
  }
  getDeployTransaction(
    _fxChild: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_fxChild, overrides || {});
  }
  attach(address: string): FxStateChildTunnel {
    return super.attach(address) as FxStateChildTunnel;
  }
  connect(signer: Signer): FxStateChildTunnel__factory {
    return super.connect(signer) as FxStateChildTunnel__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FxStateChildTunnelInterface {
    return new utils.Interface(_abi) as FxStateChildTunnelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FxStateChildTunnel {
    return new Contract(address, _abi, signerOrProvider) as FxStateChildTunnel;
  }
}
