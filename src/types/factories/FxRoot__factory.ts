/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FxRoot, FxRootInterface } from "../FxRoot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stateSender",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessageToChild",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChild",
        type: "address",
      },
    ],
    name: "setFxChild",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateSender",
    outputs: [
      {
        internalType: "contract IStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107033803806107038339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b6105ec806101176000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063450d11f014610051578063b47204771461006f578063b86cfdcf1461008b578063cb10f94c146100a7575b600080fd5b6100596100c5565b6040516100669190610409565b60405180910390f35b61008960048036038101906100849190610325565b6100eb565b005b6100a560048036038101906100a091906102f8565b6101ca565b005b6100af610269565b6040516100bc9190610494565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000338484846040516020016101049493929190610424565b604051602081830303815290604052905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316f19831600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610192929190610464565b600060405180830381600087803b1580156101ac57600080fd5b505af11580156101c0573d6000803e3d6000fd5b5050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461022557600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061029c8161059f565b92915050565b60008083601f8401126102b8576102b761057a565b5b8235905067ffffffffffffffff8111156102d5576102d4610575565b5b6020830191508360018202830111156102f1576102f061057f565b5b9250929050565b60006020828403121561030e5761030d610589565b5b600061031c8482850161028d565b91505092915050565b60008060006040848603121561033e5761033d610589565b5b600061034c8682870161028d565b935050602084013567ffffffffffffffff81111561036d5761036c610584565b5b610379868287016102a2565b92509250509250925092565b61038e816104cb565b82525050565b60006103a083856104ba565b93506103ad838584610533565b6103b68361058e565b840190509392505050565b60006103cc826104af565b6103d681856104ba565b93506103e6818560208601610542565b6103ef8161058e565b840191505092915050565b610403816104fd565b82525050565b600060208201905061041e6000830184610385565b92915050565b60006060820190506104396000830187610385565b6104466020830186610385565b8181036040830152610459818486610394565b905095945050505050565b60006040820190506104796000830185610385565b818103602083015261048b81846103c1565b90509392505050565b60006020820190506104a960008301846103fa565b92915050565b600081519050919050565b600082825260208201905092915050565b60006104d6826104dd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105088261050f565b9050919050565b600061051a82610521565b9050919050565b600061052c826104dd565b9050919050565b82818337600083830152505050565b60005b83811015610560578082015181840152602081019050610545565b8381111561056f576000848401525b50505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6105a8816104cb565b81146105b357600080fd5b5056fea26469706673582212201e3b5a88ddcc310c17354fc769119867780bca322851b88cdbe4aee0afdd5e4c64736f6c63430008070033";

export class FxRoot__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _stateSender: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FxRoot> {
    return super.deploy(_stateSender, overrides || {}) as Promise<FxRoot>;
  }
  getDeployTransaction(
    _stateSender: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stateSender, overrides || {});
  }
  attach(address: string): FxRoot {
    return super.attach(address) as FxRoot;
  }
  connect(signer: Signer): FxRoot__factory {
    return super.connect(signer) as FxRoot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FxRootInterface {
    return new utils.Interface(_abi) as FxRootInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FxRoot {
    return new Contract(address, _abi, signerOrProvider) as FxRoot;
  }
}
