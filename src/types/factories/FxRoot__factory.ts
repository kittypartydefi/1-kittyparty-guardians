/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FxRoot, FxRootInterface } from "../FxRoot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stateSender",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessageToChild",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChild",
        type: "address",
      },
    ],
    name: "setFxChild",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateSender",
    outputs: [
      {
        internalType: "contract IStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106b73803806106b78339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6105a98061010e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063450d11f014610051578063b47204771461006f578063b86cfdcf1461008b578063cb10f94c146100a7575b600080fd5b6100596100c5565b60405161006691906103f1565b60405180910390f35b61008960048036038101906100849190610315565b6100eb565b005b6100a560048036038101906100a091906102ec565b6101ca565b005b6100af610269565b6040516100bc919061047c565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033848484604051602001610104949392919061040c565b604051602081830303815290604052905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316f19831600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161019292919061044c565b600060405180830381600087803b1580156101ac57600080fd5b505af11580156101c0573d6000803e3d6000fd5b5050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461022557600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061029c8161055c565b92915050565b60008083601f8401126102b457600080fd5b8235905067ffffffffffffffff8111156102cd57600080fd5b6020830191508360018202830111156102e557600080fd5b9250929050565b6000602082840312156102fe57600080fd5b600061030c8482850161028d565b91505092915050565b60008060006040848603121561032a57600080fd5b60006103388682870161028d565b935050602084013567ffffffffffffffff81111561035557600080fd5b610361868287016102a2565b92509250509250925092565b610376816104b3565b82525050565b600061038883856104a2565b9350610395838584610509565b61039e8361054b565b840190509392505050565b60006103b482610497565b6103be81856104a2565b93506103ce818560208601610518565b6103d78161054b565b840191505092915050565b6103eb816104e5565b82525050565b6000602082019050610406600083018461036d565b92915050565b6000606082019050610421600083018761036d565b61042e602083018661036d565b818103604083015261044181848661037c565b905095945050505050565b6000604082019050610461600083018561036d565b818103602083015261047381846103a9565b90509392505050565b600060208201905061049160008301846103e2565b92915050565b600081519050919050565b600082825260208201905092915050565b60006104be826104c5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f0826104f7565b9050919050565b6000610502826104c5565b9050919050565b82818337600083830152505050565b60005b8381101561053657808201518184015260208101905061051b565b83811115610545576000848401525b50505050565b6000601f19601f8301169050919050565b610565816104b3565b811461057057600080fd5b5056fea2646970667358221220b381ca281305285fc849b2e51f544f8b3ed0c516fb34536f525c597483edce4b64736f6c63430008000033";

export class FxRoot__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _stateSender: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FxRoot> {
    return super.deploy(_stateSender, overrides || {}) as Promise<FxRoot>;
  }
  getDeployTransaction(
    _stateSender: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stateSender, overrides || {});
  }
  attach(address: string): FxRoot {
    return super.attach(address) as FxRoot;
  }
  connect(signer: Signer): FxRoot__factory {
    return super.connect(signer) as FxRoot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FxRootInterface {
    return new utils.Interface(_abi) as FxRootInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FxRoot {
    return new Contract(address, _abi, signerOrProvider) as FxRoot;
  }
}
